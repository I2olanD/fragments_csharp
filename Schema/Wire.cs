// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Wire : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Wire __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FloatVector P1 { get { return (new FloatVector()).__assign(__p.bb_pos + 0, __p.bb); } }
  public FloatVector P2 { get { return (new FloatVector()).__assign(__p.bb_pos + 12, __p.bb); } }

  public static Offset<Wire> CreateWire(FlatBufferBuilder builder, float p1_X, float p1_Y, float p1_Z, float p2_X, float p2_Y, float p2_Z) {
    builder.Prep(4, 24);
    builder.Prep(4, 12);
    builder.PutFloat(p2_Z);
    builder.PutFloat(p2_Y);
    builder.PutFloat(p2_X);
    builder.Prep(4, 12);
    builder.PutFloat(p1_Z);
    builder.PutFloat(p1_Y);
    builder.PutFloat(p1_X);
    return new Offset<Wire>(builder.Offset);
  }
}

