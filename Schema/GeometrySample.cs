// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GeometrySample : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public GeometrySample __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GeometryClass GeometryClass { get { return (GeometryClass)__p.bb.GetSbyte(__p.bb_pos + 0); } }
  public uint Id { get { return __p.bb.GetUint(__p.bb_pos + 4); } }
  public uint Transform { get { return __p.bb.GetUint(__p.bb_pos + 8); } }

  public static Offset<GeometrySample> CreateGeometrySample(FlatBufferBuilder builder, GeometryClass GeometryClass, uint Id, uint Transform) {
    builder.Prep(4, 12);
    builder.PutUint(Transform);
    builder.PutUint(Id);
    builder.Pad(3);
    builder.PutSbyte((sbyte)GeometryClass);
    return new Offset<GeometrySample>(builder.Offset);
  }
}

