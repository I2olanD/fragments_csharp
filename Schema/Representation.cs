// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Representation : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Representation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { return __p.bb.GetUint(__p.bb_pos + 0); } }
  public BoundingBox Bbox { get { return (new BoundingBox()).__assign(__p.bb_pos + 4, __p.bb); } }
  public RepresentationClass RepresentationClass { get { return (RepresentationClass)__p.bb.GetSbyte(__p.bb_pos + 28); } }

  public static Offset<Representation> CreateRepresentation(FlatBufferBuilder builder, uint Id, float bbox_min_X, float bbox_min_Y, float bbox_min_Z, float bbox_max_X, float bbox_max_Y, float bbox_max_Z, RepresentationClass RepresentationClass) {
    builder.Prep(4, 32);
    builder.Pad(3);
    builder.PutSbyte((sbyte)RepresentationClass);
    builder.Prep(4, 24);
    builder.Prep(4, 12);
    builder.PutFloat(bbox_max_Z);
    builder.PutFloat(bbox_max_Y);
    builder.PutFloat(bbox_max_X);
    builder.Prep(4, 12);
    builder.PutFloat(bbox_min_Z);
    builder.PutFloat(bbox_min_Y);
    builder.PutFloat(bbox_min_X);
    builder.PutUint(Id);
    return new Offset<Representation>(builder.Offset);
  }
}

