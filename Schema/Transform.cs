// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Transform : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Transform __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DoubleVector Position { get { return (new DoubleVector()).__assign(__p.bb_pos + 0, __p.bb); } }
  public FloatVector XDirection { get { return (new FloatVector()).__assign(__p.bb_pos + 24, __p.bb); } }
  public FloatVector YDirection { get { return (new FloatVector()).__assign(__p.bb_pos + 36, __p.bb); } }

  public static Offset<Transform> CreateTransform(FlatBufferBuilder builder, double position_X, double position_Y, double position_Z, float x_direction_X, float x_direction_Y, float x_direction_Z, float y_direction_X, float y_direction_Y, float y_direction_Z) {
    builder.Prep(8, 48);
    builder.Prep(4, 12);
    builder.PutFloat(y_direction_Z);
    builder.PutFloat(y_direction_Y);
    builder.PutFloat(y_direction_X);
    builder.Prep(4, 12);
    builder.PutFloat(x_direction_Z);
    builder.PutFloat(x_direction_Y);
    builder.PutFloat(x_direction_X);
    builder.Prep(8, 24);
    builder.PutDouble(position_Z);
    builder.PutDouble(position_Y);
    builder.PutDouble(position_X);
    return new Offset<Transform>(builder.Offset);
  }
}

