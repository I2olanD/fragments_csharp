// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Sample : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Sample __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Item { get { return __p.bb.GetUint(__p.bb_pos + 0); } }
  public uint Material { get { return __p.bb.GetUint(__p.bb_pos + 4); } }
  public uint Representation { get { return __p.bb.GetUint(__p.bb_pos + 8); } }
  public uint LocalTransform { get { return __p.bb.GetUint(__p.bb_pos + 12); } }

  public static Offset<Sample> CreateSample(FlatBufferBuilder builder, uint Item, uint Material, uint Representation, uint LocalTransform) {
    builder.Prep(4, 16);
    builder.PutUint(LocalTransform);
    builder.PutUint(Representation);
    builder.PutUint(Material);
    builder.PutUint(Item);
    return new Offset<Sample>(builder.Offset);
  }
}

